name: Build and Push Docker Images

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  # Possibilité de déclencher manuellement le workflow
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Connexion à GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extraction des métadonnées (tags, labels)
      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/ecm_rework-frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=long
            latest

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/ecm_rework-backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=long
            latest

      # Construction et push de l'image frontend
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}

      # Construction et push de l'image backend
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          build-args: |
            NODE_ENV=${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
