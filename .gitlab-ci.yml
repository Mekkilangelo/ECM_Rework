stages:
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

## Assurez-vous d'ajouter votre certificat CA sous ci/ca.crt dans le repo !

.build_template:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - mkdir -p /etc/docker/certs.d/gitlab.local:5050
    - cp ./ci/ca.crt /etc/docker/certs.d/gitlab.local:5050/ca.crt
    # Copie aussi le certificat dans le conteneur dind si possible
    - |
      if [ -n "$CI_JOB_ID" ]; then
        DIND_ID=$(docker ps -q --filter ancestor=docker:dind)
        if [ -n "$DIND_ID" ]; then
          docker cp ./ci/ca.crt $DIND_ID:/etc/docker/certs.d/gitlab.local:5050/ca.crt
        fi
      fi
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest

build-backend:
  extends: .build_template
  variables:
    IMAGE_NAME: synergia-backend
  needs: []
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest ./server
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest

build-frontend:
  extends: .build_template
  variables:
    IMAGE_NAME: synergia-frontend
  needs: []
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest ./client
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest

deploy-dev:
  stage: deploy
  image: docker/compose:latest
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker-compose -f docker-compose.dev.yml pull
    - docker-compose -f docker-compose.dev.yml up -d
  environment: development
  only:
    - dev

deploy-prod:
  stage: deploy
  image: docker/compose:latest
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker-compose -f docker-compose.prod.yml pull
    - docker-compose -f docker-compose.prod.yml up -d
  environment: production
  only:
    - main
