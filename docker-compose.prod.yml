services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  database:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network

  backend:
    image: synergia-backend:latest
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SYNC_ALTER: ${DB_SYNC_ALTER}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      JWT_INACTIVITY_EXPIRE: ${JWT_INACTIVITY_EXPIRE}
      CLIENT_URL: ${CLIENT_URL}
      API_URL: ${API_URL}
    volumes:
      - ./server/uploads:/app/uploads
    depends_on:
      - database
    networks:
      - app-network
    # Ports exposés seulement à l'intérieur du réseau Docker
    expose:
      - "5001"

  frontend:
    image: synergia-frontend:latest
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network
    # Ports exposés seulement à l'intérieur du réseau Docker
    expose:
      - "3000"


volumes:
  mysql_data_prod:

networks:
  app-network:
    driver: bridge
