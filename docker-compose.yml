services:
  database:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-synergy}
      MYSQL_USER: ${MYSQL_USER:-}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT:-3306}:3306"
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY:-}ecm-monitoring-backend:${TAG:-latest}
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DB_HOST: ${DB_HOST:-database}
      DB_NAME: ${DB_NAME:-synergy}
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-root}
      DB_SYNC_ALTER: ${DB_SYNC_ALTER:-"false"}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      CLIENT_URL: ${CLIENT_URL:-http://localhost}
      SERVER_PORT: ${SERVER_PORT:-5001}
    volumes:
      - ./server/uploads:/app/uploads
    ports:
      - "${SERVER_PORT:-5001}:5001"
    depends_on:
      - database
    networks:
      - app-network

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY:-}ecm-monitoring-frontend:${TAG:-latest}
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge
